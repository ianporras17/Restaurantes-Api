# -------------------------------
# GENERAL este es un example seguir los pasos del readme correctamente, los datos 
# propuesto funcionan correctamente para un depliegue inmediato si su computador lo permite
# mas no son los datos utilizados reales, son solo ejemplos guías
# -------------------------------

# Motor de base de datos activo: postgres o mongo
DB_ENGINE=postgres

# Puerto donde corre la API principal (Node.js)
PORT=3000

# Puerto del microservicio de búsqueda (ElasticSearch)
SEARCH_PORT=4000

# Secreto para firmar tokens JWT (puede ser cualquier string largo)
JWT_SECRET=miSuperSecretoJWT123!

# -------------------------------
# PostgreSQL (si DB_ENGINE=postgres)
# -------------------------------
# Nombre del servicio Docker si usas docker-compose: "db"
DB_HOST=db
DB_PORT=5432
DB_USER=postgres
DB_PASS=1234a
DB_NAME=restaurantes

# -------------------------------
# MongoDB (si DB_ENGINE=mongo)
# -------------------------------
# URI apuntando al router mongos del clúster shardeado
MONGO_URI=mongodb://mongos:27017/restaurantes

# -------------------------------
# ElasticSearch
# -------------------------------
# URL del nodo principal de ElasticSearch (compatibilidad ES 8.x ya configurada en el cliente)
ELASTIC_URL=http://elasticsearch:9200

# -------------------------------
# Redis
# -------------------------------
# URL del contenedor Redis (puede ser también redis://localhost:6379 en desarrollo local sin Docker)
REDIS_URL=redis://redis:6379
